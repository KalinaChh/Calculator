<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>